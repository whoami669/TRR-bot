PS C:\Users\darea\Documents\TRR-bot> del .python-version
>> del pyproject.toml
>> del uv.lock
>> echo python-3.11.10 > runtime.txt
>> git add --all
>> git commit -m "Use traditional Python deployment with requirements"
>> git push heroku main
[main 2bbed4a] Use traditional Python deployment with requirements
 4 files changed, 1815 deletions(-)
 delete mode 100644 .python-version
 delete mode 100644 pyproject.toml
 create mode 100644 runtime.txt
 delete mode 100644 uv.lock
Enumerating objects: 296, done.
Counting objects: 100% (296/296), done.
Delta compression using up to 32 threads
Compressing objects: 100% (113/113), done.
Writing objects: 100% (296/296), 343.76 KiB | 57.29 MiB/s, done.
Total 296 (delta 176), reused 288 (delta 173), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (176/176), done.
remote: Updated 82 paths from 310e6de
remote: Compressing source files... done.
remote: Building source:
remote:
remote: -----> Building on the Heroku-24 stack
remote: -----> Determining which buildpack to use for this app
remote:  !     Warning: Multiple default buildpacks reported the ability to handle this app. The first buildpack in the list below will be used.
remote:                         Detected buildpacks: Python,Node.js
remote:                         See https://devcenter.heroku.com/articles/buildpacks#buildpack-detect-order
remote: -----> Python app detected
remote:
remote:  !     Error: Couldn't find any supported Python package manager files.
remote:  !
remote:  !     A Python app on Heroku must have either a 'requirements.txt',
remote:  !     'Pipfile', 'poetry.lock' or 'uv.lock' package manager file in
remote:  !     the root directory of its source code.
remote:  !
remote:  !     Currently the root directory of your app contains:
remote:  !
remote:  !     app.json
remote:  !     attached_assets/
remote:  !     backup_1037399271735054387_20250529_163059.json
remote:  !     backup_1037399271735054387_20250529_163603.json
remote:  !     backup_1037399271735054387_20250529_163703.json
remote:  !     backup_1037399271735054387_20250529_164406.json
remote:  !     backup_1037399271735054387_20250529_164507.json
remote:  !     backup_1037399271735054387_20250529_164739.json
remote:  !     backup_1037399271735054387_20250529_165239.json
remote:  !     backup_1037399271735054387_20250529_165912.json
remote:  !     bot_database.db
remote:  !     cogs/
remote:  !     config/
remote:  !     database/
remote:  !     .env.example
remote:  !     generate_invite_urls.py
remote:  !     main.py
remote:  !     package.json
remote:  !     package-lock.json
remote:  !     Procfile
remote:  !     public/
remote:  !     .replit
remote:  !     routes/
remote:  !     runtime.txt
remote:  !     server.js
remote:  !     ultrabot.db
remote:  !     utils/
remote:  !     views/^[[0m
remote:  !
remote:  !     If your app already has a package manager file, check that it:
remote:  !
remote:  !     1. Is in the top level directory (not a subdirectory).
remote:  !     2. Has the correct spelling (the filenames are case-sensitive).
remote:  !     3. Isn't listed in '.gitignore' or '.slugignore'.
remote:  !     4. Has been added to the Git repository using 'git add --all'
remote:  !        and then committed using 'git commit'.
remote:  !
remote:  !     Otherwise, add a package manager file to your app. If your app has
remote:  !     no dependencies, then create an empty 'requirements.txt' file.
remote:  !
remote:  !     If you aren't sure which package manager to use, we recommend
remote:  !     trying uv, since it supports lockfiles, is extremely fast, and
remote:  !     is actively maintained by a full-time team:
remote:  !     https://docs.astral.sh/uv/
remote:  !
remote:  !     For help with using Python on Heroku, see:
remote:  !     https://devcenter.heroku.com/articles/getting-started-with-python
remote:  !     https://devcenter.heroku.com/articles/python-support
remote:
remote:  !     Push rejected, failed to compile Python app.
remote:
remote:  !     Push failed
remote: Verifying deploy...
remote:
remote: !       Push rejected to trrr-bot.
remote:
To https://git.heroku.com/trrr-bot.git
 ! [remote rejected] main -> main (pre-receive hook declined)
error: failed to push some refs to 'https://git.heroku.com/trrr-bot.git'